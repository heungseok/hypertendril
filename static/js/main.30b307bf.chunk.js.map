{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx"],"names":["App","className","style","marginBottom","target","href","display","justifyContent","width","src","alt","padding","title","frameBorder","allow","allowFullScreen","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2OAwFeA,MArFf,WAIE,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,UACb,wBAAIC,MAAO,CAAEC,aAAc,IAA3B,uGAGA,yBAAKF,UAAU,eACb,6BACE,uBAAGG,OAAO,SAASC,KAAK,oCAAxB,UAEF,6BACE,uBAAGD,OAAO,SAASC,KAAK,gDAAxB,WAKN,yBAAKJ,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKC,MAAO,CAAEI,QAAS,OAAQC,eAAgB,iBAC7C,yBAAKC,MAAM,MAAMC,IAtBf,8GAsB2BC,IAAI,oBAEnC,yBAAKT,UAAU,YACb,wBAAIA,UAAU,SAAd,YACA,kjDAMJ,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,SAAd,gBAGA,6BACE,4BACE,2HAGA,gKAGA,0EAGA,+JAON,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,SAAd,WAGA,yBAAKC,MAAO,CAAEI,QAAS,OAAQC,eAAgB,WAAYC,MAAO,MAAOG,QAAS,UAChF,yBAAKV,UAAU,mBACb,4BAAQW,MAAM,uBAAuBJ,MAAM,OAAOC,IAAI,4CAA4CI,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,OAKxO,yBAAKd,UAAU,oBAIf,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,SAAd,YAGA,6BACE,uBAAGG,OAAO,SAASC,KAAK,gCAAxB,kBADF,mCAC2G,uBAAGD,OAAO,SAASC,KAAK,6CAAxB,eAD3G,kMClEQW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.30b307bf.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nfunction App() {\n\n  const image = \"https://github.com/heungseok/heungseok.github.io/blob/master/static/images/hyperTendril_teaser.png?raw=true\";\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1 style={{ marginBottom: 0 }}>\n            HyperTendril: Visual Analytics for User-Driven Hyperparameter Optimization for Deep Neural Networks\n          </h1>\n          <div className=\"headerLinks\">\n            <div>\n              <a target=\"_blank\" href=\"https://arxiv.org/abs/2009.02078\">paper</a>\n            </div>\n            <div>\n              <a target=\"_blank\" href=\"https://demo-automl.nsml.navercorp.com/about\">demo</a>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"project_body\">\n          <div className=\"project_section\">\n            <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\n              <img width=\"80%\" src={image} alt=\"failed to load\"/>\n            </div>\n            <div className=\"abstract\">\n              <h3 className=\"title\">Abstract</h3>\n              <div>\n                To mitigate the pain of manually tuning hyperparameters of deep neural networks, automated machine learning (AutoML) methods have been developed to search for an optimal set of hyperparameters in large combinatorial search spaces. However, the search results of AutoML methods significantly depend on initial configurations, making it a non-trivial task to find a proper configuration. Therefore, human intervention via a visual analytic approach bears huge potential in this task. In response, we propose HyperTendril, a web-based visual analytics system that supports user-driven hyperparameter tuning processes in a model-agnostic environment. HyperTendril takes a novel approach to effectively steering hyperparameter optimization through an iterative, interactive tuning procedure that allows users to refine the search spaces and the configuration of the AutoML method based on their own insights from given results. Using HyperTendril, users can obtain insights into the complex behaviors of various hyperparameter search algorithms and diagnose their configurations. In addition, HyperTendril supports variable importance analysis to help the users refine their search spaces based on the analysis of relative importance of different hyperparameters and their interaction effects. We present the evaluation demonstrating how HyperTendril helps users steer their tuning processes via a longitudinal user study based on the analysis of interaction logs and in-depth interviews while we deploy our system in a professional industrial environment.\n              </div>\n            </div>\n          </div>\n\n          <div className=\"project_section\">\n            <h3 className=\"title\">\n              Contribution\n            </h3>\n            <div>\n              <ul>\n                <li>\n                  A novel visual representation that visualizes the exploration history of AutoML algorithms.\n                </li>\n                <li>\n                  A novel approach to effectively steer usersâ€™ hyperparameter optimization processes by guiding on important hyperparameters.\n                </li>\n                <li>\n                  A deployed system scaling to large models.\n                </li>\n                <li>\n                  User studies with NAVER engineers and researchers to show how our visualization and approach work in an AI research company.\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"project_section\">\n            <h3 className=\"title\">\n              Preview\n            </h3>\n            <div style={{ display: 'flex', justifyContent: 'flex-end', width: '70%', padding: '0 15%' }}>\n              <div className=\"video-container\">\n                <iframe title=\"HyperTendril_preview\" width=\"100%\" src=\"https://www.youtube.com/embed/AewQb1As5A0\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"project_section\">\n            \n          </div>\n\n          <div className=\"project_section\">\n            <h3 className=\"title\">\n              Citation\n            </h3>\n            <div>\n              <a target=\"_blank\" href=\"https://heungseok.github.io/\">Heungseok Park</a>, Yoonsoo Nam, Ji-hoon Kim, and <a target=\"_blank\" href=\"https://sites.google.com/site/jaegulchoo/\">Jaegul Choo</a>. HyperTendril: Visual Analytics for User-Driven Hyperparameter Optimization for Deep Neural Networks. IEEE Transactions on Visualization and Computer Graphics and IEEE VIS 2020 (VAST).\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}